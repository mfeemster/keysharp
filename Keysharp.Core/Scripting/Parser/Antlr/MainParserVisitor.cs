//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/minip/source/repos/Keysharp_clone/Keysharp.Core/Scripting/Parser/Antlr/MainParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MainParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMainParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MainParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.sourceElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSourceElements([NotNull] MainParser.SourceElementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.sourceElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSourceElement([NotNull] MainParser.SourceElementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>HotIfDirective</c>
	/// labeled alternative in <see cref="MainParser.positionalDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHotIfDirective([NotNull] MainParser.HotIfDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>HotstringDirective</c>
	/// labeled alternative in <see cref="MainParser.positionalDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHotstringDirective([NotNull] MainParser.HotstringDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InputLevelDirective</c>
	/// labeled alternative in <see cref="MainParser.positionalDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputLevelDirective([NotNull] MainParser.InputLevelDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UseHookDirective</c>
	/// labeled alternative in <see cref="MainParser.positionalDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUseHookDirective([NotNull] MainParser.UseHookDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SuspendExemptDirective</c>
	/// labeled alternative in <see cref="MainParser.positionalDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSuspendExemptDirective([NotNull] MainParser.SuspendExemptDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.remap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRemap([NotNull] MainParser.RemapContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.hotstring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHotstring([NotNull] MainParser.HotstringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.hotstringExpansion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHotstringExpansion([NotNull] MainParser.HotstringExpansionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.hotkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHotkey([NotNull] MainParser.HotkeyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MainParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStatement([NotNull] MainParser.BlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MainParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] MainParser.StatementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.variableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableStatement([NotNull] MainParser.VariableStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.awaitStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAwaitStatement([NotNull] MainParser.AwaitStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.deleteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteStatement([NotNull] MainParser.DeleteStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatement([NotNull] MainParser.ImportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importFromBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportFromBlock([NotNull] MainParser.ImportFromBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importModuleItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportModuleItems([NotNull] MainParser.ImportModuleItemsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importAliasName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportAliasName([NotNull] MainParser.ImportAliasNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.moduleExportName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModuleExportName([NotNull] MainParser.ModuleExportNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importedBinding"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportedBinding([NotNull] MainParser.ImportedBindingContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportDefault([NotNull] MainParser.ImportDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportNamespace([NotNull] MainParser.ImportNamespaceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.importFrom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportFrom([NotNull] MainParser.ImportFromContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.aliasName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAliasName([NotNull] MainParser.AliasNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExportDeclaration</c>
	/// labeled alternative in <see cref="MainParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExportDeclaration([NotNull] MainParser.ExportDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExportDefaultDeclaration</c>
	/// labeled alternative in <see cref="MainParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExportDefaultDeclaration([NotNull] MainParser.ExportDefaultDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.exportFromBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExportFromBlock([NotNull] MainParser.ExportFromBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.exportModuleItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExportModuleItems([NotNull] MainParser.ExportModuleItemsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.exportAliasName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExportAliasName([NotNull] MainParser.ExportAliasNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] MainParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.variableDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationList([NotNull] MainParser.VariableDeclarationListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] MainParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.functionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionStatement([NotNull] MainParser.FunctionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] MainParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MainParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.flowBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFlowBlock([NotNull] MainParser.FlowBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.untilProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUntilProduction([NotNull] MainParser.UntilProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.elseProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseProduction([NotNull] MainParser.ElseProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SpecializedLoopStatement</c>
	/// labeled alternative in <see cref="MainParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpecializedLoopStatement([NotNull] MainParser.SpecializedLoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LoopStatement</c>
	/// labeled alternative in <see cref="MainParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatement([NotNull] MainParser.LoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="MainParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] MainParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForInStatement</c>
	/// labeled alternative in <see cref="MainParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInStatement([NotNull] MainParser.ForInStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.forInParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInParameters([NotNull] MainParser.ForInParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] MainParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] MainParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] MainParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.yieldStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitYieldStatement([NotNull] MainParser.YieldStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] MainParser.SwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseBlock([NotNull] MainParser.CaseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseClause([NotNull] MainParser.CaseClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.labelledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabelledStatement([NotNull] MainParser.LabelledStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.gotoStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGotoStatement([NotNull] MainParser.GotoStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.throwStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowStatement([NotNull] MainParser.ThrowStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.tryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryStatement([NotNull] MainParser.TryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.catchProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchProduction([NotNull] MainParser.CatchProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.catchAssignable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchAssignable([NotNull] MainParser.CatchAssignableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.catchClasses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchClasses([NotNull] MainParser.CatchClassesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.finallyProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFinallyProduction([NotNull] MainParser.FinallyProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] MainParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaration([NotNull] MainParser.ClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.classExtensionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassExtensionName([NotNull] MainParser.ClassExtensionNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.classTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassTail([NotNull] MainParser.ClassTailContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ClassMethodDeclaration</c>
	/// labeled alternative in <see cref="MainParser.classElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassMethodDeclaration([NotNull] MainParser.ClassMethodDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ClassPropertyDeclaration</c>
	/// labeled alternative in <see cref="MainParser.classElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassPropertyDeclaration([NotNull] MainParser.ClassPropertyDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ClassFieldDeclaration</c>
	/// labeled alternative in <see cref="MainParser.classElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassFieldDeclaration([NotNull] MainParser.ClassFieldDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NestedClassDeclaration</c>
	/// labeled alternative in <see cref="MainParser.classElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNestedClassDeclaration([NotNull] MainParser.NestedClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.methodDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDefinition([NotNull] MainParser.MethodDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.propertyDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyDefinition([NotNull] MainParser.PropertyDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.classPropertyName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassPropertyName([NotNull] MainParser.ClassPropertyNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.propertyGetterDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyGetterDefinition([NotNull] MainParser.PropertyGetterDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.propertySetterDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertySetterDefinition([NotNull] MainParser.PropertySetterDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.fieldDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldDefinition([NotNull] MainParser.FieldDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterList([NotNull] MainParser.FormalParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.formalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterArg([NotNull] MainParser.FormalParameterArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.lastFormalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLastFormalParameterArg([NotNull] MainParser.LastFormalParameterArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteral([NotNull] MainParser.ArrayLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.mapLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMapLiteral([NotNull] MainParser.MapLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.mapElementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMapElementList([NotNull] MainParser.MapElementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.mapElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMapElement([NotNull] MainParser.MapElementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertyExpressionAssignment</c>
	/// labeled alternative in <see cref="MainParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyExpressionAssignment([NotNull] MainParser.PropertyExpressionAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.propertyName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyName([NotNull] MainParser.PropertyNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.dereference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDereference([NotNull] MainParser.DereferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] MainParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] MainParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.expressionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionSequence([NotNull] MainParser.ExpressionSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.memberIndexArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberIndexArguments([NotNull] MainParser.MemberIndexArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostIncrementDecrementExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostIncrementDecrementExpression([NotNull] MainParser.PostIncrementDecrementExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] MainParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RelationalExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] MainParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TernaryExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryExpression([NotNull] MainParser.TernaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreIncrementDecrementExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreIncrementDecrementExpression([NotNull] MainParser.PreIncrementDecrementExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalAndExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpression([NotNull] MainParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PowerExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowerExpression([NotNull] MainParser.PowerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ContainExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContainExpression([NotNull] MainParser.ContainExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FatArrowExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFatArrowExpression([NotNull] MainParser.FatArrowExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalOrExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpression([NotNull] MainParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExpressionDummy</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionDummy([NotNull] MainParser.ExpressionDummyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] MainParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RegExMatchExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegExMatchExpression([NotNull] MainParser.RegExMatchExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionExpression([NotNull] MainParser.FunctionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] MainParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitAndExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitAndExpression([NotNull] MainParser.BitAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitOrExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitOrExpression([NotNull] MainParser.BitOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ConcatenateExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConcatenateExpression([NotNull] MainParser.ConcatenateExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitXOrExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitXOrExpression([NotNull] MainParser.BitXOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqualityExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] MainParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VerbalNotExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVerbalNotExpression([NotNull] MainParser.VerbalNotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] MainParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CoalesceExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoalesceExpression([NotNull] MainParser.CoalesceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitShiftExpression</c>
	/// labeled alternative in <see cref="MainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitShiftExpression([NotNull] MainParser.BitShiftExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitShiftExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitShiftExpressionDuplicate([NotNull] MainParser.BitShiftExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpressionDuplicate([NotNull] MainParser.UnaryExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostIncrementDecrementExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostIncrementDecrementExpressionDuplicate([NotNull] MainParser.PostIncrementDecrementExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreIncrementDecrementExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreIncrementDecrementExpressionDuplicate([NotNull] MainParser.PreIncrementDecrementExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitOrExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitOrExpressionDuplicate([NotNull] MainParser.BitOrExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RegExMatchExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegExMatchExpressionDuplicate([NotNull] MainParser.RegExMatchExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VerbalNotExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVerbalNotExpressionDuplicate([NotNull] MainParser.VerbalNotExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SingleExpressionDummy</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleExpressionDummy([NotNull] MainParser.SingleExpressionDummyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TernaryExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryExpressionDuplicate([NotNull] MainParser.TernaryExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitAndExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitAndExpressionDuplicate([NotNull] MainParser.BitAndExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ContainExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContainExpressionDuplicate([NotNull] MainParser.ContainExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MultiplicativeExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpressionDuplicate([NotNull] MainParser.MultiplicativeExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PowerExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowerExpressionDuplicate([NotNull] MainParser.PowerExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RelationalExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpressionDuplicate([NotNull] MainParser.RelationalExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AdditiveExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpressionDuplicate([NotNull] MainParser.AdditiveExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalOrExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpressionDuplicate([NotNull] MainParser.LogicalOrExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpressionDuplicate([NotNull] MainParser.AssignmentExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqualityExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpressionDuplicate([NotNull] MainParser.EqualityExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ConcatenateExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConcatenateExpressionDuplicate([NotNull] MainParser.ConcatenateExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalAndExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpressionDuplicate([NotNull] MainParser.LogicalAndExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CoalesceExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoalesceExpressionDuplicate([NotNull] MainParser.CoalesceExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitXOrExpressionDuplicate</c>
	/// labeled alternative in <see cref="MainParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitXOrExpressionDuplicate([NotNull] MainParser.BitXOrExpressionDuplicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] MainParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MapLiteralExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMapLiteralExpression([NotNull] MainParser.MapLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ObjectLiteralExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectLiteralExpression([NotNull] MainParser.ObjectLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarRefExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarRefExpression([NotNull] MainParser.VarRefExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DynamicIdentifierExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDynamicIdentifierExpression([NotNull] MainParser.DynamicIdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] MainParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayLiteralExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteralExpression([NotNull] MainParser.ArrayLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AccessExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessExpression([NotNull] MainParser.AccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="MainParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] MainParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.accessSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessSuffix([NotNull] MainParser.AccessSuffixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.memberDot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberDot([NotNull] MainParser.MemberDotContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.memberIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberIdentifier([NotNull] MainParser.MemberIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.dynamicIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDynamicIdentifier([NotNull] MainParser.DynamicIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer([NotNull] MainParser.InitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.assignable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignable([NotNull] MainParser.AssignableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectLiteral([NotNull] MainParser.ObjectLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.functionHead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionHead([NotNull] MainParser.FunctionHeadContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.functionHeadPrefix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionHeadPrefix([NotNull] MainParser.FunctionHeadPrefixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.functionExpressionHead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionExpressionHead([NotNull] MainParser.FunctionExpressionHeadContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.fatArrowExpressionHead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFatArrowExpressionHead([NotNull] MainParser.FatArrowExpressionHeadContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] MainParser.FunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperator([NotNull] MainParser.AssignmentOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] MainParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] MainParser.BooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericLiteral([NotNull] MainParser.NumericLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.bigintLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBigintLiteral([NotNull] MainParser.BigintLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.getter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetter([NotNull] MainParser.GetterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.setter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetter([NotNull] MainParser.SetterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.identifierName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierName([NotNull] MainParser.IdentifierNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] MainParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.reservedWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReservedWord([NotNull] MainParser.ReservedWordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyword([NotNull] MainParser.KeywordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.s"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitS([NotNull] MainParser.SContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MainParser.eos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEos([NotNull] MainParser.EosContext context);
}
