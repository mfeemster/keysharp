//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/minip/source/repos/Keysharp_clone/Keysharp.Core/Scripting/Parser/Antlr/PreprocessorParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PreprocessorParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPreprocessorParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorDeclaration</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorDeclaration([NotNull] PreprocessorParser.PreprocessorDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorConditional</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorConditional([NotNull] PreprocessorParser.PreprocessorConditionalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorLine</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorLine([NotNull] PreprocessorParser.PreprocessorLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorDiagnostic</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorDiagnostic([NotNull] PreprocessorParser.PreprocessorDiagnosticContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorRegion</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorRegion([NotNull] PreprocessorParser.PreprocessorRegionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorPragma</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorPragma([NotNull] PreprocessorParser.PreprocessorPragmaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorNullable</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorNullable([NotNull] PreprocessorParser.PreprocessorNullableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorTextualDirective</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorTextualDirective([NotNull] PreprocessorParser.PreprocessorTextualDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorPersistent</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorPersistent([NotNull] PreprocessorParser.PreprocessorPersistentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorOptionalTextualDirective</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorOptionalTextualDirective([NotNull] PreprocessorParser.PreprocessorOptionalTextualDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorNoDynamicVars</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorNoDynamicVars([NotNull] PreprocessorParser.PreprocessorNoDynamicVarsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorErrorStdOut</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorErrorStdOut([NotNull] PreprocessorParser.PreprocessorErrorStdOutContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorWinActivateForce</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorWinActivateForce([NotNull] PreprocessorParser.PreprocessorWinActivateForceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorNoTrayIcon</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorNoTrayIcon([NotNull] PreprocessorParser.PreprocessorNoTrayIconContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorNumericDirective</c>
	/// labeled alternative in <see cref="PreprocessorParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorNumericDirective([NotNull] PreprocessorParser.PreprocessorNumericDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreprocessorParser.directive_new_line_or_sharp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirective_new_line_or_sharp([NotNull] PreprocessorParser.Directive_new_line_or_sharpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreprocessorParser.preprocessor_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessor_expression([NotNull] PreprocessorParser.Preprocessor_expressionContext context);
}
